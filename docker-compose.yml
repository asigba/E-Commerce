version: '3.8'

services:
  user-service:
    build:
      context: ./backend/user_service
      dockerfile: Dockerfile
    ports:
      - "5002:5002"
  
  product-service:
    build:
      context: ./backend/product_service
      dockerfile: Dockerfile
    ports:
      - "5001:5001"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://postgres:password@postgres:5432/ecommerce  
  order-service:  
    build:
      context: ./backend/order_service
      dockerfile: Dockerfile
    ports:
      - "5003:5003"
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - user-service
      - product-service
      - order-service
    environment:
      REACT_APP_API_URL: http://localhost:5000

  postgres:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: ecommerce
    ports:
      - "5432:5432"
    volumes:
      - database:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    
volumes:
  database:
  
  